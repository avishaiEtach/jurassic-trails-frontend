@use "../abstracts/" as abs;

.autocomplete-combo-box {
  outline: 1px solid abs.$secondary;
  padding: abs.rem(8px) abs.rem(10px);
  border-radius: 5px;
  &:hover {
    outline: 2px solid abs.$secondary;
  }
  &:has(.autocomplete-input:focus) {
    // outline: none;
    // border-color: abs.$primary;
    // box-shadow: 0 0 0 3px rgba(168, 198, 108, 0.3);
    outline: 2px solid abs.$secondary;
    color: rgba(abs.$secondary, 1);
  }
}

.autocomplete-input {
  border: 0;
  padding: 0;
  margin: 0;
  background-color: transparent;
  text-transform: capitalize;
  &::placeholder {
    color: rgba(abs.$secondary, 0.8);
  }
  &:focus-visible {
    outline: none;
  }
}

.autocomplete-clear-button {
  background-color: transparent;
  border: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  display: flex;
  align-items: center;
  cursor: default;
  user-select: none;
  svg {
    path {
      transition: 0.4s ease;
      fill: abs.$secondary;
    }
  }
  &:hover,
  &:focus-visible {
    svg {
      path {
        fill: abs.$secondary;
        opacity: 0.4;
      }
    }
  }
  &:focus-visible {
    outline: none;
  }
  &[data-show="true"] {
    opacity: 1;
    cursor: pointer;
    user-select: all;
  }
}

.autocomplete-popover[data-trigger="ComboBox"] {
  width: var(--trigger-width);
  background-color: abs.$accent;
  border: 1px solid abs.$secondary;
  border-radius: 8px;
  box-shadow: 0 8px 24px rgba(abs.$black, 0.15);
  margin-top: abs.rem(4px);
  opacity: 0;
  transform: translateY(-10px);
  animation: fadeSlideIn 0.3s forwards;
}

.autocomplete-list-box-item {
  padding: abs.rem(10px) abs.rem(16px);
  cursor: pointer;
  transition: background-color 0.2s;
  text-transform: capitalize;

  &[data-focus-visible] {
    outline: none;
  }

  &[data-selected] {
    background-color: abs.$primary;
    color: abs.$white;
  }

  &[data-focused],
  &[data-pressed] {
    background-color: abs.$primary;
    color: abs.$white;
  }
}
